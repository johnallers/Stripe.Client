<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".txt" #>


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using FluentAssertions;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Stripe.Client.Sdk.Clients;
using Stripe.Client.Sdk.Models.Filters;


namespace Jefwork.Stripe.Sdk.Tests.Models.Filters
{
<# 
var names = new [] 
{ 
    "Account",
    "AccountBankAccount",
    "AccountCard",
    "ActiveSubscription",
    "ApplicationFee",
    "ApplicationFeeRefund",
    "BalanceTransaction",
    "BankAccount",
    "BitcoinReceiver",
    "Charge",
    "Coupon",
    "Customer",
    "CustomerBankAccount",
    "CustomerCard",
    "Dispute",
    "Event",
    "FileUpload",
    "Invoice",
    "InvoiceItem",
    "InvoiceLineItem",
    "Order",
    "OrderItem",
    "Plan",
    "Product",
    "Recipient",
    "RecipientCard",
    "Refund",
    "Sku",
    "Transfer",
    "TransferReversal",
    "UpcomingInvoice"
};
foreach(var name in names) {#>
    [TestClass]
    public class <#=name#>ListFilterTests
    {
        private <#=name#>ListFilter _filter;

        [TestInitialize]
        public void Init()
        {
            _filter = GenFu.GenFu.New<<#=name#>ListFilter>();
        }

        [TestMethod]
        public void <#=name#>ListFilter_TheFieldIsRequired()
        {
            // Arrange 
            // _filter.TheField = null;

            // Act
            Func<IEnumerable<KeyValuePair<string, string>>> func = () => StripeClient.GetKeyValuePairs(_filter);

            // Assert
            func.Enumerating().ShouldThrow<ValidationException>();
        }

        [TestMethod]
        public void <#=name#>ListFilter_DoesNotHaveRequiredFields()
        {
            // Arrange 
            _filter = new <#=name#>ListFilter();

            // Act
            var keyValuePairs = StripeClient.GetKeyValuePairs(_filter).ToList();

            // Assert
            keyValuePairs.Should().HaveCount(0);
        }

        [TestMethod]
        public void <#=name#>ListFilter_GetAllKeys()
        {
            // Arrange

            // Act
            var keyValuePairs = StripeClient.GetKeyValuePairs(_filter).ToList();

            // Assert
            keyValuePairs.Should().HaveCount(3)
                .And.NotContain(x => x.Key == "account_id")
                .And.Contain(x => x.Key == "starting_after")
                .And.Contain(x => x.Key == "limit");
        }
    }
<# } #>
}

<#+
 string ToCamelCase(string str)
 {
    return str.Substring(0,1).ToLower() + str.Substring(1);
 }
#>